# –°–ø–∏—Å–∫–∏

# list_1 = [] # –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞
# list_2 = list() # –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞
# list_1 = [7, 9, 11, 13, 15, 17]
# print (*list_1) # –µ—Å–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º * —Ç–æ —É–±–∏—Ä–∞—é—Ç—Å—è —Å–∫–æ–±–∫–∏ –≤ –≤—ã–≤–æ–¥–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞

# for i in list_1:
#     print (i)  # –∑–Ω–∞—á–µ–Ω–∏—è –≤—ã–≤–æ–¥—è—Ç—Å—è –≤ —Å—Ç–æ–ª–±–∏–∫

# –£–∑–Ω–∞—Ç—å –¥–ª–∏–Ω—É —Å—Ç—Ä–æ–∫–∏
# print (len(list_1))

# –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É –ø–æ—ç–ª–µ–º–µ–Ω—Ç–Ω–æ
# print (list_1[0]) # –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å –Ω–∞—á–∞–ª–∞ —Å—Ç—Ä–æ–∫–∏
# print (list_1[-1]) # –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –≤ —Å–ø–∏—Å–æ–∫

# list_1 = [1, 5]
# print(list_1)
# list_1.append(8) # append –¥–æ–±–∞–≤–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞
# print(list_1)

# Programm

# list_1 = []
# print(list_1)
# for i in range(5):
#     list_1.append(i)
#     print(list_1)

# input   
# []
# [0]
# [0, 1]
# [0, 1, 2]
# [0, 1, 2, 3]
# [0, 1, 2, 3, 4]


# –û—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Å–æ —Å–ø–∏—Å–∫–∞–º–∏:
# 1. –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞.
# –ú–µ—Ç–æ–¥ pop —É–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞:

# list_1 = [12, 7, -1, 21, 0]
# print(list_1.pop()) # 0
# print(list_1) # [12, 7, -1, 21]
# print(list_1.pop()) # 21
# print(list_1) # [12, 7, -1]
# print(list_1.pop()) # -1
# print(list_1) # [12, 7]

# 3. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞ –Ω—É–∂–Ω—É—é –ø–æ–∑–∏—Ü–∏—é.
# –§—É–Ω–∫—Ü–∏—è insert ‚Äî —É–∫–∞–∑–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ (–ø–æ–∑–∏—Ü–∏–∏) –∏ –∑–Ω–∞—á–µ–Ω–∏—è.

# list_1 = [12, 7, -1, 21, 0]
# print(list_1.insert(2, 11)) #–ø–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ - –º–µ—Å—Ç–æ, –≤—Ç–æ—Ä–æ–µ —Å–∞–º–æ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
# print(list_1) # [12, 7, 11, -1, 21, 0]

# –°—Ä–µ–∑ —Å–ø–∏—Å–∫–∞
# ‚óè –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –≤ –∏–Ω–¥–µ–∫—Å–µ ‚Äî —Å—á—ë—Ç —Å –∫–æ–Ω—Ü–∞ —Å–ø–∏—Å–∫–∞

# list_1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# print(list_1[0]) # 1
# print(list_1[1]) # 2
# print(list_1[len(list_1)-1]) # 10
# print(list_1[-5]) # 6
# print(list_1[:]) # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# print(list_1[:2]) # [1, 2] –µ—Å–ª–∏ –ø–µ—Ä–µ–¥ : –Ω–∏—á–µ–≥–æ —Ç–æ —Å –Ω–∞—á–∞–ª–∞ —Å–ø–∏—Å–∫–∞ –Ω–∞—á–∏–Ω–∞–µ–º
# print(list_1[len(list_1)-2:]) #[9, 10] –µ—Å–ª–∏ –ø–æ—Å–ª–µ : –Ω–∏—á–µ–≥–æ –Ω–µ—Ç —Ç–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –≤ –∫–æ–Ω—Ü–µ —Å–ø–∏—Å–∫–∞
# print(list_1[2:9]) # [3, 4, 5, 6, 7, 8, 9]
# print(list_1[6:-18]) # []
# print(list_1[0:len(list_1):6]) # [1, 7]
# print(list_1[::6]) # [1, 7] —Å –Ω–∞—á–∞–ª–∞ –¥–æ –∫–æ–Ω—Ü–∞ —Å —à–∞–≥–æ–º 6

# –ö–æ—Ä—Ç–µ–∂–∏
# üí° –ö–æ—Ä—Ç–µ–∂ ‚Äî —ç—Ç–æ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–π —Å–ø–∏—Å–æ–∫.
# –¢–æ–≥–¥–∞ –¥–ª—è —á–µ–≥–æ –Ω—É–∂–Ω—ã –∫–æ—Ä—Ç–µ–∂–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å? –í —Å–ª—É—á–∞–µ –∑–∞—â–∏—Ç—ã
# –∫–∞–∫–∏—Ö-–ª–∏–±–æ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π (–Ω–∞–º–µ—Ä–µ–Ω–Ω—ã—Ö –∏–ª–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö). –ö–æ—Ä—Ç–µ–∂ –∑–∞–Ω–∏–º–∞–µ—Ç
# –º–µ–Ω—å—à–µ –º–µ—Å—Ç–∞ –≤ –ø–∞–º—è—Ç–∏ –∏ —Ä–∞–±–æ—Ç–∞—é—Ç –±—ã—Å—Ç—Ä–µ–µ, –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å–æ —Å–ø–∏—Å–∫–∞–º–∏


# t = () # —Å–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ –∫–æ—Ä—Ç–µ–∂–∞
# print(type(t)) # class <'tuple'>
# t = (1,) # –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ—Ä—Ç–µ–∂–∞ –Ω—É–∂–Ω–∞ –∑–∞–ø—è—Ç–∞—è
# print(type(t))
# t = (1)
# print(type(t))

# v = [1, 8, 9]
# print(v)
# print(type(v))

# v = tuple(v)
# print(v)
# print(type(v))

# input
# [1, 8, 9]
# <class 'list'>
# (1, 8, 9)
# <class 'tuple'>
# -----------------------------------------------------------------

# v = [1, 8, 9]
# print(v)
# print(type(v))

# v = tuple(v)
# print(v)
# print(type(v))

# a,b,c = v
# print(a,b,c)

# input
# [1, 8, 9]
# <class 'list'>
# (1, 8, 9)
# <class 'tuple'>
# 1 8 9

# t = (1, 2, 3, 5,)
# for i in t:
#     print(i)

#     or

# for i in range(len(t)):
#     print(t[i])

# input
# 1
# 2
# 3
# 5

# tuple –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –ø–æ—ç—Ç–æ–º—É –ø—Ä–∏ –∑–∞–º–µ–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–∏—Å–æ–∫

# t = [1, 2, 3, 5]
# t[0] = 2
# print(t)

# input
# [2, 2, 3, 5]

# –°–ª–æ–≤–∞—Ä–∏
# üí° –°–ª–æ–≤–∞—Ä–∏ ‚Äî –Ω–µ—É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —Å
# –¥–æ—Å—Ç—É–ø–æ–º –ø–æ –∫–ª—é—á—É.
# –í —Å–ø–∏—Å–∫–∞—Ö –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞. –í —Å–ª–æ–≤–∞—Ä–µ –¥–ª—è
# –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞ (—Å—Ç—Ä–æ–∫–∞, —á–∏—Å–ª–æ).

# d = {}
# d = dict()
# #d —ç—Ç–æ –∫–ª—é—á —Ä–∞–≤–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞
# d['q'] = 'qwerty' 
# print(d)

# d['w'] = 'werty' 
# print(d)

# print(d['w'])

# input
# {'q': 'qwerty'}
# {'q': 'qwerty', 'w': 'werty'}
# werty

# EXAMPLE

# dictionary = {}
# dictionary ={'up': '‚Üë', 'left': '‚Üê', 'down': '‚Üì', 'right': '‚Üí'}
# print(dictionary) # {'up':'‚Üë', 'left':'‚Üê', 'down':'‚Üì', 'right':'‚Üí'} 

# dictionary[895] = 788945
# print(dictionary) # {'up': '‚Üë', 'left': '‚Üê', 'down': '‚Üì', 'right': '‚Üí', 895: 788945}

# del dictionary['left'] # —É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
# for item in dictionary: # for (k,v) in dictionary.items():
#     print('{}: {}'.format(item, dictionary[item]))

# or

# dictionary = {}
# dictionary ={'up': '‚Üë', 'left': '‚Üê', 'down': '‚Üì', 'right': '‚Üí'}
# del dictionary['left']
# for (k,v) in dictionary.items():
#     print(k, v)

#     input
# up
# down
# right

#________________________________________________________________________--

# dictionary = {}
# dictionary ={'up': '‚Üë', 'left': '‚Üê', 'down': '‚Üì', 'right': '‚Üí'}
# print(dictionary.items()) #dict_items([('up', '‚Üë'), ('left', '‚Üê'), ('down', '‚Üì'), ('right', '‚Üí')])

# –ú–Ω–æ–∂–µ—Å—Ç–≤–∞
# üí° –ú–Ω–æ–∂–µ—Å—Ç–≤–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç –≤ —Å–µ–±–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
# —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–µ.
# –û–¥–Ω–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ª—é–±—ã—Ö —Ç–∏–ø–æ–≤. –ï—Å–ª–∏ —É –í–∞—Å –µ—Å—Ç—å –¥–≤–∞
# –º–Ω–æ–∂–µ—Å—Ç–≤–∞, –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–≤–µ—Ä—à–∞—Ç—å –Ω–∞–¥ –Ω–∏–º–∏ –ª—é–±—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏,
# –Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ, –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –∏ —Ä–∞–∑–Ω–æ—Å—Ç—å. –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º –∏—Ö.

# colors = {'red', 'green', 'blue'}
# print(colors) # {'red', 'green', 'blue'}
# colors.add('red')
# print(colors) # {'red', 'green', 'blue'}
# colors.add('gray')
# print(colors) # {'red', 'green', 'blue','gray'}
# colors.remove('red')
# print(colors) # {'green', 'blue','gray'}
# colors.remove('red') # KeyError: 'red'
# colors.discard('red') # ok
# print(colors) # {'green', 'blue','gray'}
# colors.clear() # { }
# print(colors) # set()

# set = () # —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –º–Ω–æ–∂–µ—Å—Ç–≤

# –û–ø–µ—Ä–∞—Ü–∏–∏ —Å–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞–º–∏ –≤ Python

# a = {1, 2, 3, 5, 8}
# b = {2, 5, 8, 13, 21}
# c = a.copy() # c = {1, 2, 3, 5, 8}
# u = a.union(b) # u = {1, 2, 3, 5, 8, 13, 21}
# i = a.intersection(b) # i = {8, 2, 5} –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ —Å—Ö–æ–∂–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π
# dl = a.difference(b) # dl = {1, 3} –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –≤—ã—á–∏—Ç–∞–Ω–∏—è (–∏—Å–∫–ª—é—á–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏–∑ –¥—Ä—É–≥–æ–≥–æ)
# dr = b.difference(a) # dr = {13, 21}
# q=a.union(b).difference(a.intersection(b)) # {1, 21, 3, 13} –≤—Å–µ –≤–º–µ—Å—Ç–µ, –∏—Å–∫–ª—é—á–µ–Ω–∏–µ —Å—Ö–æ–∂–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏ –æ—Å—Ç–∞—Ç–æ–∫ –∏–∑ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π

# –ù–µ–∏–∑–º–µ–Ω—è–µ–º–æ–µ –∏–ª–∏ –∑–∞–º–æ—Ä–æ–∂–µ–Ω–Ω–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ(frozenset) ‚Äî –º–Ω–æ–∂–µ—Å—Ç–≤–æ, —Å –∫–æ—Ç–æ—Ä—ã–º
# –Ω–µ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –º–µ—Ç–æ–¥—ã —É–¥–∞–ª–µ–Ω–∏—è –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.

# a = {1, 2, 3, 5, 8}
# b = frozenset(a)
# print(b) # frozenset({1, 2, 3, 5, 8})

# List comprehension ‚Äî —ç—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Å–æ–∑–¥–∞–Ω–∏—é —Å–ø–∏—Å–∫–∞, –∫–æ—Ç–æ—Ä—ã–π
# –∑–∞–¥–µ–π—Å—Ç–≤—É–µ—Ç —Ü–∏–∫–ª for, –∞ —Ç–∞–∫–∂–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ if-else –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–æ–≥–æ, —á—Ç–æ –≤ –∏—Ç–æ–≥–µ
# –æ–∫–∞–∂–µ—Ç—Å—è –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º —Å–ø–∏—Å–∫–µ.

# 1. –ü—Ä–æ—Å—Ç–∞—è —Å–∏—Ç—É–∞—Ü–∏—è ‚Äî —Å–ø–∏—Å–æ–∫:
# list_1 = [exp for item in iterable]

# 2. –í—ã–±–æ—Ä–∫–∞ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É —É—Å–ª–æ–≤–∏—é
# list_1 = [exp for item in iterable (if conditional)]

# –ó–∞–¥–∞—á–∞: –°–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 100.
# –†–µ—à–µ–Ω–∏–µ:
# 1. –°–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 100

# list_1 = []
# # for i in range(1, 101):
# #     list_1.append(i)
# print(list_1) # [1, 2, 3,..., 100]

# or

# list_1 = [i for i in range(1, 101)] # [1, 2, 3,..., 100]
# print(list_1) # [1, 2, 3,..., 100]

# 2. –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª–æ–≤–∏–µ (—Ç–æ–ª—å–∫–æ —á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞)
# list_1 = [i for i in range(1, 101) if i % 2 == 0] # [2, 4, 6,..., 100]
# print(list_1) # [1, 2, 3,..., 100]

# –î–æ–ø—É—Å—Ç–∏–º, –≤—ã —Ä–µ—à–∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –ø–∞—Ä—ã –∫–∞–∂–¥–æ–º—É –∏–∑ —á–∏—Å–µ–ª (–∫–æ—Ä—Ç–µ–∂–∏)
# list_1 = [(i, i) for i in range(1, 101) if i % 2 == 0] # [(2, 2), (4, 4),...,
# # (100, 100)]
# print(list_1) # [1, 2, 3,..., 100]

# –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ —É–º–Ω–æ–∂–∞—Ç—å, –¥–µ–ª–∏—Ç—å, –ø—Ä–∏–±–∞–≤–ª—è—Ç—å, –≤—ã—á–∏—Ç–∞—Ç—å. –ù–∞–ø—Ä–∏–º–µ—Ä, —É–º–Ω–æ–∂–∏—Ç—å
# –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 2.
# list_1 = [i * 2 for i in range(10) if i % 2 == 0]
# print(list_1) # [0, 4, 8, 12, 16]
